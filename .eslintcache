[{"/Users/garrettbland/websites/blockbuilder/src/index.js":"1","/Users/garrettbland/websites/blockbuilder/src/reportWebVitals.js":"2","/Users/garrettbland/websites/blockbuilder/src/App.js":"3","/Users/garrettbland/websites/blockbuilder/src/redux/store.js":"4","/Users/garrettbland/websites/blockbuilder/src/Router.js":"5","/Users/garrettbland/websites/blockbuilder/src/redux/reducer.js":"6","/Users/garrettbland/websites/blockbuilder/src/views/Home.js":"7","/Users/garrettbland/websites/blockbuilder/src/views/Page.js":"8","/Users/garrettbland/websites/blockbuilder/src/redux/constants.js":"9","/Users/garrettbland/websites/blockbuilder/src/utils/blocks.js":"10","/Users/garrettbland/websites/blockbuilder/src/firebase.js":"11","/Users/garrettbland/websites/blockbuilder/src/utils/serialize.js":"12","/Users/garrettbland/websites/blockbuilder/src/components/builder/BuilderWrapper.js":"13","/Users/garrettbland/websites/blockbuilder/src/components/builder/Modal.js":"14","/Users/garrettbland/websites/blockbuilder/src/components/builder/CustomModal.js":"15","/Users/garrettbland/websites/blockbuilder/src/components/builder/Builder.js":"16","/Users/garrettbland/websites/blockbuilder/src/components/builder/ActionButton.js":"17","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/NewSection.js":"18","/Users/garrettbland/websites/blockbuilder/src/components/builder/RemoveBlockButton.js":"19","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/SectionEdit.js":"20","/Users/garrettbland/websites/blockbuilder/src/components/builder/SubmitButton.js":"21","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/Section.js":"22","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/SectionBackground.js":"23","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/SectionDivider.js":"24","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/EmptySection.js":"25","/Users/garrettbland/websites/blockbuilder/src/components/EmailCapture.js":"26","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/TextEdit.js":"27","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/Text.js":"28","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImageEdit.js":"29","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/Image.js":"30","/Users/garrettbland/websites/blockbuilder/src/components/builder/link/Link.js":"31","/Users/garrettbland/websites/blockbuilder/src/components/builder/link/LinkEdit.js":"32","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/Row.js":"33","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/RowEdit.js":"34","/Users/garrettbland/websites/blockbuilder/src/components/builder/column/Column.js":"35","/Users/garrettbland/websites/blockbuilder/src/components/builder/column/EmptyColumn.js":"36","/Users/garrettbland/websites/blockbuilder/src/components/builder/ConfirmDelete.js":"37","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerShape.js":"38","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/BackgroundStyle.js":"39","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerColor.js":"40","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerAdd.js":"41","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerRemove.js":"42","/Users/garrettbland/websites/blockbuilder/src/components/builder/ModalTabs.js":"43","/Users/garrettbland/websites/blockbuilder/src/utils/shapes.js":"44","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/AddRow.js":"45","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/BackgroundColor.js":"46","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/PaddingTop.js":"47","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/TextContent.js":"48","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/PaddingBottom.js":"49","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/TextColor.js":"50","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/TextAlignment.js":"51","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/FontSize.js":"52","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/FontWeight.js":"53","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/LineHeight.js":"54","/Users/garrettbland/websites/blockbuilder/src/components/builder/BlockActionsButton.js":"55","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImageUrl.js":"56","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImageAlt.js":"57","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/BoxShadow.js":"58","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/BorderRadius.js":"59","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/MarginTop.js":"60","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImagePreview.js":"61","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/MarginBottom.js":"62","/Users/garrettbland/websites/blockbuilder/src/components/builder/AddContentButton.js":"63","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/AutoMargin.js":"64","/Users/garrettbland/websites/blockbuilder/src/components/builder/link/LinkTitle.js":"65","/Users/garrettbland/websites/blockbuilder/src/components/builder/link/LinkHref.js":"66","/Users/garrettbland/websites/blockbuilder/src/components/builder/AddContent.js":"67","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/MaxWidth.js":"68","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/BackgroundOpacity.js":"69","/Users/garrettbland/websites/blockbuilder/src/components/builder/CloseButton.js":"70","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/ColorPicker.js":"71","/Users/garrettbland/websites/blockbuilder/src/components/builder/Label.js":"72","/Users/garrettbland/websites/blockbuilder/src/utils/colors.js":"73","/Users/garrettbland/websites/blockbuilder/src/utils/text.js":"74","/Users/garrettbland/websites/blockbuilder/src/utils/spacing.js":"75","/Users/garrettbland/websites/blockbuilder/src/utils/border.js":"76","/Users/garrettbland/websites/blockbuilder/src/utils/tools.js":"77","/Users/garrettbland/websites/blockbuilder/src/utils/opacity.js":"78","/Users/garrettbland/websites/blockbuilder/src/utils/width.js":"79","/Users/garrettbland/websites/blockbuilder/src/utils/shadow.js":"80","/Users/garrettbland/websites/blockbuilder/src/utils/background.js":"81"},{"size":656,"mtime":1610336004382,"results":"82","hashOfConfig":"83"},{"size":362,"mtime":1610336004384,"results":"84","hashOfConfig":"83"},{"size":694,"mtime":1610319284021,"results":"85","hashOfConfig":"83"},{"size":181,"mtime":1610335987832,"results":"86","hashOfConfig":"83"},{"size":292,"mtime":1610336004366,"results":"87","hashOfConfig":"83"},{"size":10703,"mtime":1610336004383,"results":"88","hashOfConfig":"83"},{"size":493,"mtime":1610336004386,"results":"89","hashOfConfig":"83"},{"size":1893,"mtime":1610423428825,"results":"90","hashOfConfig":"83"},{"size":638,"mtime":1610335987832,"results":"91","hashOfConfig":"83"},{"size":3489,"mtime":1610335987840,"results":"92","hashOfConfig":"83"},{"size":724,"mtime":1610335987826,"results":"93","hashOfConfig":"83"},{"size":5979,"mtime":1610409777297,"results":"94","hashOfConfig":"83"},{"size":1287,"mtime":1610335987792,"results":"95","hashOfConfig":"83"},{"size":3700,"mtime":1610335987803,"results":"96","hashOfConfig":"83"},{"size":2293,"mtime":1610335987794,"results":"97","hashOfConfig":"83"},{"size":2422,"mtime":1610335987792,"results":"98","hashOfConfig":"83"},{"size":9756,"mtime":1610424503507,"results":"99","hashOfConfig":"83"},{"size":1429,"mtime":1610335987808,"results":"100","hashOfConfig":"83"},{"size":1130,"mtime":1610335987803,"results":"101","hashOfConfig":"83"},{"size":1865,"mtime":1610336004379,"results":"102","hashOfConfig":"83"},{"size":1309,"mtime":1610336004371,"results":"103","hashOfConfig":"83"},{"size":3968,"mtime":1610335987808,"results":"104","hashOfConfig":"83"},{"size":1197,"mtime":1610335987808,"results":"105","hashOfConfig":"83"},{"size":802,"mtime":1610336004378,"results":"106","hashOfConfig":"83"},{"size":1147,"mtime":1610335987807,"results":"107","hashOfConfig":"83"},{"size":33623,"mtime":1610336004367,"results":"108","hashOfConfig":"83"},{"size":1374,"mtime":1610336004381,"results":"109","hashOfConfig":"83"},{"size":5345,"mtime":1610335987821,"results":"110","hashOfConfig":"83"},{"size":1228,"mtime":1610336004371,"results":"111","hashOfConfig":"83"},{"size":1903,"mtime":1610335987794,"results":"112","hashOfConfig":"83"},{"size":1750,"mtime":1610335987797,"results":"113","hashOfConfig":"83"},{"size":1716,"mtime":1610336004373,"results":"114","hashOfConfig":"83"},{"size":3658,"mtime":1610335987805,"results":"115","hashOfConfig":"83"},{"size":1279,"mtime":1610336004375,"results":"116","hashOfConfig":"83"},{"size":222,"mtime":1610335987792,"results":"117","hashOfConfig":"83"},{"size":1167,"mtime":1610335987793,"results":"118","hashOfConfig":"83"},{"size":2354,"mtime":1610336004369,"results":"119","hashOfConfig":"83"},{"size":4553,"mtime":1610336004377,"results":"120","hashOfConfig":"83"},{"size":20250,"mtime":1610336004376,"results":"121","hashOfConfig":"83"},{"size":3571,"mtime":1610336004377,"results":"122","hashOfConfig":"83"},{"size":2058,"mtime":1610335987806,"results":"123","hashOfConfig":"83"},{"size":1962,"mtime":1610335987807,"results":"124","hashOfConfig":"83"},{"size":3397,"mtime":1610336004370,"results":"125","hashOfConfig":"83"},{"size":1343,"mtime":1610335987842,"results":"126","hashOfConfig":"83"},{"size":1774,"mtime":1610336004374,"results":"127","hashOfConfig":"83"},{"size":1620,"mtime":1610335987810,"results":"128","hashOfConfig":"83"},{"size":1853,"mtime":1610335987817,"results":"129","hashOfConfig":"83"},{"size":9530,"mtime":1610336004380,"results":"130","hashOfConfig":"83"},{"size":1932,"mtime":1610335987816,"results":"131","hashOfConfig":"83"},{"size":1606,"mtime":1610336004380,"results":"132","hashOfConfig":"83"},{"size":3584,"mtime":1610335987821,"results":"133","hashOfConfig":"83"},{"size":1689,"mtime":1610335987811,"results":"134","hashOfConfig":"83"},{"size":1869,"mtime":1610335987812,"results":"135","hashOfConfig":"83"},{"size":1795,"mtime":1610335987820,"results":"136","hashOfConfig":"83"},{"size":2478,"mtime":1610336004368,"results":"137","hashOfConfig":"83"},{"size":975,"mtime":1610335987795,"results":"138","hashOfConfig":"83"},{"size":1007,"mtime":1610335987795,"results":"139","hashOfConfig":"83"},{"size":1859,"mtime":1610335987811,"results":"140","hashOfConfig":"83"},{"size":1970,"mtime":1610335987810,"results":"141","hashOfConfig":"83"},{"size":1838,"mtime":1610335987812,"results":"142","hashOfConfig":"83"},{"size":438,"mtime":1610423100625,"results":"143","hashOfConfig":"83"},{"size":1883,"mtime":1610335987812,"results":"144","hashOfConfig":"83"},{"size":1006,"mtime":1610335987791,"results":"145","hashOfConfig":"83"},{"size":3023,"mtime":1610335987810,"results":"146","hashOfConfig":"83"},{"size":1012,"mtime":1610336004374,"results":"147","hashOfConfig":"83"},{"size":1013,"mtime":1610336004373,"results":"148","hashOfConfig":"83"},{"size":4066,"mtime":1610336004368,"results":"149","hashOfConfig":"83"},{"size":1761,"mtime":1610335987804,"results":"150","hashOfConfig":"83"},{"size":2004,"mtime":1610335987804,"results":"151","hashOfConfig":"83"},{"size":1700,"mtime":1610336004369,"results":"152","hashOfConfig":"83"},{"size":6674,"mtime":1610336004379,"results":"153","hashOfConfig":"83"},{"size":1252,"mtime":1610336004370,"results":"154","hashOfConfig":"83"},{"size":1259,"mtime":1610335987841,"results":"155","hashOfConfig":"83"},{"size":1939,"mtime":1610335987842,"results":"156","hashOfConfig":"83"},{"size":1318,"mtime":1610335987842,"results":"157","hashOfConfig":"83"},{"size":977,"mtime":1610335987840,"results":"158","hashOfConfig":"83"},{"size":556,"mtime":1610335987842,"results":"159","hashOfConfig":"83"},{"size":922,"mtime":1610335987841,"results":"160","hashOfConfig":"83"},{"size":1006,"mtime":1610335987843,"results":"161","hashOfConfig":"83"},{"size":926,"mtime":1610335987841,"results":"162","hashOfConfig":"83"},{"size":354,"mtime":1610335987840,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"o9hf99",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"166"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"166"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"166"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"166"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"166"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"166"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"166"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"166"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"166"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"166"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"166"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"166"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"166"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"166"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"166"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"166"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"166"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"166"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"166"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"166"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"166"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"166"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"166"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"166"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"166"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"166"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"166"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"166"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"166"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"166"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"166"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"166"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"166"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"166"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"166"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"166"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"166"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"/Users/garrettbland/websites/blockbuilder/src/index.js",[],["365","366"],"/Users/garrettbland/websites/blockbuilder/src/reportWebVitals.js",[],"/Users/garrettbland/websites/blockbuilder/src/App.js",["367"],"/Users/garrettbland/websites/blockbuilder/src/redux/store.js",[],"/Users/garrettbland/websites/blockbuilder/src/Router.js",[],"/Users/garrettbland/websites/blockbuilder/src/redux/reducer.js",[],"/Users/garrettbland/websites/blockbuilder/src/views/Home.js",["368"],"import React, { useEffect } from 'react'\n// import { useRouter } from 'next/router'\nimport BuilderWrapper from '@/components/builder/BuilderWrapper'\n\nconst Home = () => {\n    // return <div>Home page</div>\n    // const router = useRouter()\n\n    // useEffect(() => {\n    //     if (router?.query?.page_id !== undefined) {\n    //         console.log(`Page id exists...${router.query.page_id}`)\n    //     }\n    // }, [router.query.page_id])\n\n    return <BuilderWrapper />\n}\n\nexport default Home\n","/Users/garrettbland/websites/blockbuilder/src/views/Page.js",["369"],"/Users/garrettbland/websites/blockbuilder/src/redux/constants.js",[],"/Users/garrettbland/websites/blockbuilder/src/utils/blocks.js",[],"/Users/garrettbland/websites/blockbuilder/src/firebase.js",[],"/Users/garrettbland/websites/blockbuilder/src/utils/serialize.js",["370","371","372"],"import { html } from 'common-tags'\nimport { generateShapes } from '@/utils/shapes'\n\nexport const SerializeToHtml = (blocks) => {\n    /**\n     * Takes in blocks array and returns html\n     */\n\n    if (!Array.isArray(blocks)) {\n        console.warn(`'blocks' parameter must be an Array`)\n        return\n    }\n\n    return blocks\n        .map((block) => {\n            switch (block.type) {\n                case 'section': {\n                    return Section(block)\n                }\n                case 'section-background': {\n                    return SectionBackground(block)\n                }\n                case 'section-divider-top': {\n                    return SectionStyle(block)\n                }\n                case 'section-divider-bottom': {\n                    return SectionStyle(block)\n                }\n                case 'row': {\n                    return Row(block)\n                }\n                case 'column': {\n                    return Column(block)\n                }\n                case 'text': {\n                    return Text(block)\n                }\n                case 'image': {\n                    return Image(block)\n                }\n                case 'link': {\n                    return Link(block)\n                }\n            }\n        })\n        .join('')\n}\n\nconst Section = (block) => {\n    return html`\n        <section class=\"${block.classList.join(' ')}\">\n            ${block.data.length > 0 ? SerializeToHtml(block.data) : ''}\n        </section>\n    `\n}\n\nconst SectionBackground = (block) => {\n    const generateGradientStyle = () => {\n        if (block.data.gradient_type === 'linear') {\n            return `background-image: linear-gradient(${block.data.degree}deg, ${block.data.color_start}, ${block.data.color_end}),url('${block.data.src}');`\n        } else if (block.data.gradient_type === 'radial') {\n            return `background-image: radial-gradient(circle at center, ${block.data.color_start}, ${block.data.color_end}),url('${block.data.src}');`\n        }\n    }\n\n    const generateBlurStyle = () => {\n        if (block.data.blur && block.data.blur > 0) {\n            return `filter: blur(${block.data.blur}px);transform: scale(1.${block.data.blur});`\n        }\n    }\n\n    return html`\n        <div\n            class=\"${block.classList.join(' ')}\"\n            style=\"${generateGradientStyle()}${block.data.blur ? generateBlurStyle() : ''}\"\n        ></div>\n    `\n}\n\nconst SectionStyle = (block) => {\n    const shapes = generateShapes()\n    return html`\n        <div class=\"${[...block.classList, 'z-30'].join(' ')}\">\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 1440 320\"\n                preserveAspectRatio=\"none\"\n                class=\"w-full h-full ${block.type === 'section-divider-top'\n                    ? 'transform rotate-180'\n                    : ''}\"\n            >\n                <path fill=\"currentColor\" fillOpacity=\"1\" d=\"${shapes[block.data.shape]}\"></path>\n            </svg>\n        </div>\n    `\n}\n\nconst Row = (block) => {\n    if (Array.isArray(block.data) && block.data.length > 0) {\n        return html`\n            <div class=\"${block.classList.join(' ')}\">${SerializeToHtml(block.data)}</div>\n        `\n    }\n}\n\nconst Column = (block) => {\n    if (Array.isArray(block.data) && block.data.length > 0) {\n        return html`\n            <div class=\"${block.classList.join(' ')}\">${SerializeToHtml(block.data)}</div>\n        `\n    }\n}\n\nconst Text = (block) => {\n    return html`<div class=\"${block.classList.join(' ')}\">${SerializeSlate(block)}</div>`\n}\n\nconst Image = (block) => {\n    return html`\n        <img class=\"${block.classList.join(' ')}\" src=\"${block.data.src}\" alt=\"${block.data.alt}\" />\n    `\n}\n\nconst Link = (block) => {\n    return html`\n        <div class=\"flex\">\n            <a\n                class=\"${block.classList.join(' ')}\"\n                href=\"${block.data.href}\"\n                target=\"${block.data.target}\"\n            >\n                ${block.data.title}\n            </a>\n        </div>\n    `\n}\n\nconst SerializeSlate = (block) => {\n    const htmlstring = block.content.data\n        .map((item, index) => {\n            if (item.type === 'paragraph') {\n                return html`\n                    <p>\n                        ${item.children.map((child) => {\n                            if (child.type === 'link') {\n                                return html`\n                                    <a href=\"${child.url}\">\n                                        ${child.children.map((linkChild) => {\n                                            return html`<span\n                                                class=\"${linkChild?.underline\n                                                    ? 'underline'\n                                                    : ''} ${linkChild?.italic\n                                                    ? 'italic'\n                                                    : ''} ${linkChild?.bold ? 'font-bold' : ''}\"\n                                                >${linkChild.text}</span\n                                            >`\n                                        })}\n                                    </a>\n                                `\n                            } else {\n                                if (child.text === '') {\n                                    return html`<br />`\n                                }\n\n                                return html`<span\n                                    class=\"${child?.underline ? 'underline' : ''} ${child?.italic\n                                        ? 'italic'\n                                        : ''} ${child?.bold ? 'font-bold' : ''}\"\n                                    >${child.text}</span\n                                >`\n                            }\n                        })}\n                    </p>\n                `\n            }\n        })\n        .join('')\n\n    return htmlstring\n}\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/BuilderWrapper.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/Modal.js",["373","374","375"],"import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SET_EDITING, SET_MODAL_VISIBILITY, UPDATE_BLOCK } from '@/redux/constants'\nimport RemoveBlockButton from './RemoveBlockButton'\nimport SubmitButton from './SubmitButton'\nimport SectionEdit from './section/SectionEdit'\nimport TextEdit from './text/TextEdit'\nimport ImageEdit from './image/ImageEdit'\nimport LinkEdit from './link/LinkEdit'\nimport RowEdit from './row/RowEdit'\n\nconst Modal = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const is_modal_visible = useSelector((state) => state.is_modal_visible)\n    const dispatch = useDispatch()\n    const overlayNode = useRef()\n    const modalNode = useRef()\n\n    useEffect(() => {\n        /**\n         * Event listener when mounted to listen for mousedown\n         * for overlay\n         */\n        overlayNode.current.addEventListener('mousedown', handleClick)\n\n        /**\n         * Return function to be called on component unmount\n         */\n        return () => {\n            overlayNode?.current?.removeEventListener('mousedown', handleClick)\n        }\n    }, [])\n\n    const handleClick = (event) => {\n        if (modalNode.current && modalNode.current.contains(event.target)) {\n            /**\n             * Do nothing since click is inside sidbar\n             */\n            return\n        }\n\n        /**\n         * Handle outside sideBar node click\n         */\n        dispatch({\n            type: SET_MODAL_VISIBILITY,\n            payload: false,\n        })\n\n        /**\n         * We set this timeout to match the transition\n         * duration in the modal. If we don't do this,\n         * then the z-index changes instantly when closing\n         * and flahes but will fade in.\n         */\n        setTimeout(() => {\n            dispatch({\n                type: SET_EDITING,\n            })\n        }, 200)\n    }\n\n    return (\n        <div\n            ref={overlayNode}\n            className={`fixed h-screen w-screen bg-opacity-50 bg-black transition duration-200 overflow-y-scroll ${\n                is_modal_visible ? 'opacity-100' : 'opacity-0'\n            } ${currentlyEditing && currentlyEditing.id ? 'z-30' : 'z-0'}`}\n            style={{ backdropFilter: `blur(10px)` }}\n        >\n            <div\n                ref={modalNode}\n                className={`bg-white max-w-4xl mx-auto rounded-lg overflow-hidden my-12 transition duration-150 ease-in-out transform ${\n                    is_modal_visible ? '' : '-translate-y-2'\n                }`}\n            >\n                {currentlyEditing && currentlyEditing.id && (\n                    <div className=\"relative\">\n                        <div className=\"z-10\">\n                            {currentlyEditing.type === 'section' && <SectionEdit />}\n                            {currentlyEditing.type === 'row' && <RowEdit />}\n                            {currentlyEditing.type === 'text' && <TextEdit />}\n                            {currentlyEditing.type === 'image' && <ImageEdit />}\n                            {currentlyEditing.type === 'link' && <LinkEdit />}\n                        </div>\n                        <div className=\"absolute bottom-0 left-0 w-full z-20 rounded-b-lg bg-white modal-tab-shadow-bottom\">\n                            <div className=\"flex justify-between items-end px-4 py-4\">\n                                <RemoveBlockButton title=\"Remove Block\" />\n                                <SubmitButton title=\"Submit\" />\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/CustomModal.js",["376","377"],"import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SET_CUSTOM_MODAL } from '@/redux/constants'\n\nconst CustomModal = () => {\n    const custom_modal = useSelector((state) => state.custom_modal)\n    const dispatch = useDispatch()\n    const overlayNode = useRef()\n    const modalNode = useRef()\n\n    useEffect(() => {\n        /**\n         * Event listener when mounted to listen for mousedown\n         * for overlay\n         */\n        overlayNode.current.addEventListener('mousedown', handleClick)\n\n        /**\n         * Return function to be called on component unmount\n         */\n        return () => {\n            overlayNode?.current?.removeEventListener('mousedown', handleClick)\n        }\n    }, [])\n\n    const handleClick = (event) => {\n        if (modalNode.current && modalNode.current.contains(event.target)) {\n            /**\n             * Do nothing since click is inside sidbar\n             */\n            return\n        }\n\n        /**\n         * Handle outside sideBar node click\n         */\n\n        dispatch({\n            type: SET_CUSTOM_MODAL,\n            payload: {\n                visible: false,\n            },\n        })\n\n        setTimeout(() => {\n            dispatch({\n                type: SET_CUSTOM_MODAL,\n                payload: {\n                    component: null,\n                    maxWidth: null,\n                },\n            })\n        }, 200)\n    }\n\n    return (\n        <div\n            ref={overlayNode}\n            className={`fixed h-screen w-screen bg-opacity-50 bg-black transition duration-200 overflow-y-scroll z-40 ${\n                custom_modal.visible ? 'opacity-100' : 'opacity-0 pointer-events-none'\n            }`}\n            style={{ backdropFilter: `blur(10px)` }}\n        >\n            <div\n                ref={modalNode}\n                className={`bg-white ${\n                    custom_modal.maxWidth ? custom_modal.maxWidth : 'max-w-xl'\n                } mx-auto rounded-lg overflow-hidden my-12 transition duration-150 ease-in-out transform ${\n                    custom_modal.visible ? '' : '-translate-y-2'\n                }`}\n            >\n                <div>{custom_modal.component}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default CustomModal\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/Builder.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/ActionButton.js",["378","379","380","381","382","383","384","385","386"],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/NewSection.js",["387"],"import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ADD_SECTION } from '@/redux/constants'\nimport { PlusCircle } from 'react-feather'\n\nconst NewSection = () => {\n    const dispatch = useDispatch()\n\n    const AddSection = () => {\n        dispatch({\n            type: ADD_SECTION,\n        })\n    }\n\n    return (\n        <div className=\"py-24 bg-gray-100 shadow-inner flex justify-center\">\n            <button\n                className=\"mx-auto rounded-lg text-base font-medium py-2 px-8 bg-gradient-to-b from-blue-400 to-blue-500 hover:from-blue-500 hover:to-blue-600 text-white focus:outline-none shadow-lg\"\n                onClick={() => AddSection()}\n            >\n                Add New Section\n            </button>\n        </div>\n    )\n\n    return (\n        <div className=\"py-12\">\n            <div\n                onClick={() => AddSection()}\n                className=\"mx-auto max-w-md flex justify-center items-center bg-white rounded-lg shadow-xl border-4 border-gray-300 py-2 hover:border-blue-400 cursor-pointer opacity-70 hover:opacity-100\"\n            >\n                <div className=\"flex flex-row items-center text-base text-gray-700 pr-2 hover:border-gray-300\">\n                    <PlusCircle strokeWidth={1.3} className=\"w-10 h-10 text-black p-2\" />\n                    <div>Add Section</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewSection\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/RemoveBlockButton.js",["388","389","390"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    SET_EDITING,\n    REMOVE_BLOCK,\n    SET_MODAL_VISIBILITY,\n    SET_CUSTOM_MODAL,\n} from '@/redux/constants'\nimport ConfirmDelete from '@/components/builder/ConfirmDelete'\nimport { Trash2 } from 'react-feather'\n\nconst RemoveBlockButton = ({ title = 'Remove Element' }) => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const dispatch = useDispatch()\n\n    const handleRemove = () => {\n        dispatch({\n            type: SET_CUSTOM_MODAL,\n            payload: {\n                visible: true,\n                component: <ConfirmDelete currentlyEditing={currentlyEditing} />,\n                maxWidth: null,\n            },\n        })\n    }\n\n    return (\n        <div>\n            <button\n                onClick={() => handleRemove()}\n                className=\"rounded-lg px-2 py-2 bg-gray-200 focus:outline-none text-gray-700 hover:bg-gray-300\"\n            >\n                <Trash2 strokeWidth=\"2.2\" className=\"w-5 h-5\" />\n            </button>\n        </div>\n    )\n}\n\nexport default RemoveBlockButton\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/SectionEdit.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/SubmitButton.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/Section.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/SectionBackground.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/SectionDivider.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/EmptySection.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/EmailCapture.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/text/TextEdit.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/text/Text.js",["391"],"import React, { useEffect, useState, useRef } from 'react'\nimport { returnFound } from 'find-and'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SET_EDITING, SET_MODAL_VISIBILITY } from '@/redux/constants'\nimport BlockActionsButton from '../BlockActionsButton'\n\nconst Text = ({ block }) => {\n    const [showTool, setShowTool] = useState(false)\n    const textRef = useRef()\n    const blocks = useSelector((state) => state.blocks)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const text = textRef.current\n\n        text.addEventListener('mouseenter', (event) => {\n            setShowTool(true)\n        })\n        text.addEventListener('mouseleave', (event) => {\n            setShowTool(false)\n        })\n        return () => {\n            text.removeEventListener('mouseenter', () => {})\n            text.removeEventListener('mouseleave', () => {})\n        }\n    })\n\n    return (\n        <div data-type=\"text\" ref={textRef} className={[...block.classList, 'relative'].join(' ')}>\n            <div\n                onClick={() => {\n                    dispatch({\n                        type: SET_MODAL_VISIBILITY,\n                        payload: true,\n                    })\n                    dispatch({\n                        type: SET_EDITING,\n                        payload: returnFound(blocks, { id: block.id }),\n                    })\n                }}\n                className={`absolute top-0 left-0 h-full w-full cursor-pointer ${\n                    showTool ? 'block ring-4 rounded' : 'hidden'\n                }`}\n            >\n                <div className=\"flex items-center justify-center h-full w-full relative z-50\">\n                    <BlockActionsButton block={block} />\n                </div>\n            </div>\n            <div>\n                {block.content.data.map((item, index) => {\n                    switch (item.type) {\n                        case 'paragraph': {\n                            return (\n                                <p>\n                                    {item.children.map((child, childIndex) => {\n                                        switch (child.type) {\n                                            case 'link': {\n                                                return (\n                                                    <a>\n                                                        {child.children.map(\n                                                            (linkChild, linkChildIndex) => {\n                                                                return (\n                                                                    <span\n                                                                        className={`\n                                                            ${linkChild.italic ? 'italic' : ''}\n                                                            ${linkChild.bold ? 'font-bold' : ''}\n                                                            ${\n                                                                linkChild.underline\n                                                                    ? 'underline'\n                                                                    : ''\n                                                            }\n                                                        `}\n                                                                    >\n                                                                        {linkChild.text}\n                                                                    </span>\n                                                                )\n                                                            }\n                                                        )}\n                                                    </a>\n                                                )\n                                            }\n                                            default: {\n                                                if (child.text === '') {\n                                                    return <br />\n                                                }\n                                                return (\n                                                    <span\n                                                        className={`\n                                                            ${child.italic ? 'italic' : ''}\n                                                            ${child.bold ? 'font-bold' : ''}\n                                                            ${child.underline ? 'underline' : ''}\n                                                        `}\n                                                    >\n                                                        {child.text}\n                                                    </span>\n                                                )\n                                            }\n                                        }\n                                    })}\n                                </p>\n                            )\n                        }\n                        default: {\n                            return null\n                        }\n                    }\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Text\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImageEdit.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/image/Image.js",["392","393"],"import React, { useEffect, useState, useRef } from 'react'\nimport { returnFound } from 'find-and'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SET_EDITING, DUPLICATE_BLOCK, SET_MODAL_VISIBILITY } from '@/redux/constants'\nimport AddContentButton from '../AddContentButton'\nimport BlockActionsButton from '../BlockActionsButton'\n\nconst Image = ({ block }) => {\n    const [showTool, setShowTool] = useState(false)\n    const imageRef = useRef()\n    const blocks = useSelector((state) => state.blocks)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const image = imageRef.current\n\n        image.addEventListener('mouseenter', (event) => {\n            setShowTool(true)\n        })\n        image.addEventListener('mouseleave', (event) => {\n            setShowTool(false)\n        })\n    })\n\n    return (\n        <div ref={imageRef} className=\"relative z-10\">\n            <div\n                onClick={() => {\n                    dispatch({\n                        type: SET_MODAL_VISIBILITY,\n                        payload: true,\n                    })\n                    dispatch({\n                        type: SET_EDITING,\n                        payload: returnFound(blocks, { id: block.id }),\n                    })\n                }}\n                className={`absolute top-0 left-0 h-full w-full cursor-pointer ${\n                    showTool ? 'block ring-4 rounded' : 'hidden'\n                }`}\n            >\n                <div className=\"flex items-center justify-center h-full w-full relative z-50\">\n                    <BlockActionsButton block={block} />\n                </div>\n            </div>\n            <img\n                src={block.data.src}\n                alt={block.data.alt}\n                data-type=\"image\"\n                className={[...block.classList, 'relative'].join(' ')}\n            />\n        </div>\n    )\n}\n\nexport default Image\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/link/Link.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/link/LinkEdit.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/row/Row.js",["394","395"],"import React, { useEffect, useState, useRef } from 'react'\nimport { returnFound } from 'find-and'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    SET_EDITING,\n    APPEND_ROW,\n    DUPLICATE_BLOCK,\n    SET_MODAL_VISIBILITY,\n    SET_CUSTOM_MODAL,\n} from '@/redux/constants'\nimport { Settings, Copy, PlusCircle } from 'react-feather'\nimport AddRow from './AddRow'\nimport CustomModal from '@/components/builder/CustomModal'\n\nconst Row = ({ block, children }) => {\n    const [showTool, setShowTool] = useState(false)\n    const rowRef = useRef()\n    const blocks = useSelector((state) => state.blocks)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const row = rowRef.current\n\n        row.addEventListener('mouseenter', (event) => {\n            setShowTool(true)\n        })\n        row.addEventListener('mouseleave', (event) => {\n            setShowTool(false)\n        })\n        return () => {\n            row.removeEventListener('mouseenter', () => {})\n            row.removeEventListener('mouseleave', () => {})\n        }\n    })\n\n    const handleAddRow = () => {\n        dispatch({\n            type: SET_CUSTOM_MODAL,\n            payload: {\n                visible: true,\n                component: <AddRow block={block} />,\n                maxWidth: null,\n            },\n        })\n        // const columns = window.prompt('How many columns?')\n        // const availableColumns = [1, 2, 3, 4, 5, 6]\n        // if (availableColumns.includes(parseInt(columns))) {\n        //     dispatch({\n        //         type: APPEND_ROW,\n        //         payload: {\n        //             id: block.id,\n        //             columns: parseInt(columns),\n        //         },\n        //     })\n        // } else {\n        //     alert('Number not allowed')\n        // }\n    }\n\n    const DuplicateBlock = () => {\n        dispatch({\n            type: DUPLICATE_BLOCK,\n            payload: block,\n        })\n    }\n\n    const handleSettingsClick = () => {\n        dispatch({\n            type: SET_MODAL_VISIBILITY,\n            payload: true,\n        })\n        dispatch({\n            type: SET_EDITING,\n            payload: returnFound(blocks, { id: block.id }),\n        })\n    }\n\n    return (\n        <div data-type=\"row\" ref={rowRef} className={[...block.classList].join(' ')}>\n            <div\n                className={`absolute top-0 left-0 flex flex-row w-full h-full pointer-events-none ${\n                    showTool ? 'block ring-4 ring-blue-400  rounded overflow-hidden' : 'hidden'\n                }`}\n            >\n                <div className=\"absolute top-0 left-0 flex flex-row items-center bg-blue-400  rounded-br-lg pointer-events-auto\">\n                    <Settings\n                        onClick={() => handleSettingsClick()}\n                        strokeWidth={1.3}\n                        className=\"w-10 h-10 text-black transform transition duration-150 ease-in-out hover:scale-110 p-2 cursor-pointer\"\n                    />\n                    <Copy\n                        strokeWidth={1.3}\n                        className=\"w-10 h-10 text-black transform transition duration-150 ease-in-out hover:scale-110 p-2 cursor-pointer\"\n                        onClick={() => DuplicateBlock()}\n                    />\n                    <PlusCircle\n                        strokeWidth={1.3}\n                        className=\"w-10 h-10 text-black transform transition duration-150 ease-in-out hover:scale-110 p-2 cursor-pointer\"\n                        onClick={() => handleAddRow()}\n                    />\n                </div>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default Row\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/RowEdit.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/column/Column.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/column/EmptyColumn.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/ConfirmDelete.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerShape.js",["396"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { generateShapes } from '@/utils/shapes'\nimport Label from '@/components/builder/Label'\nconst findAnd = require('find-and')\n\nconst DividerShape = ({ position }) => {\n    const shapes = generateShapes()\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [currentlyEditingChild, setCurrentlyEditingChild] = useState({})\n    const [shape, setShape] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentlyEditingChildIndex = currentlyEditing.data.findIndex(\n            (block) => block.type === `section-divider-${position}`\n        )\n        if (currentlyEditingChildIndex !== -1) {\n            const editingChild = currentlyEditing.data[currentlyEditingChildIndex]\n            setCurrentlyEditingChild(editingChild)\n\n            if (editingChild.data.shape) {\n                /**\n                 * Shape is set\n                 */\n                setShape(editingChild.data.shape)\n            }\n        } else {\n            /**\n             * No child\n             */\n            setCurrentlyEditingChild({})\n        }\n    }, [currentlyEditing])\n\n    const handleShapeDividerUpdate = (value) => {\n        setShape(value)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                data: findAnd.changeProps(\n                    currentlyEditing.data,\n                    { id: currentlyEditingChild.id },\n                    {\n                        ...currentlyEditingChild,\n                        data: {\n                            shape: value,\n                        },\n                    }\n                ),\n            },\n        })\n    }\n\n    if (currentlyEditingChild && currentlyEditingChild.data) {\n        return (\n            <div>\n                <Label title=\"Divider Shape\" showClass={false} />\n                <div className=\"grid grid-cols-4 gap-4\">\n                    {Object.entries(shapes).map(([key]) => (\n                        <div\n                            key={key}\n                            onClick={() => handleShapeDividerUpdate(key)}\n                            className={`col-span-1 h-20 bg-white text-gray-600 rounded-lg border-2 hover:border-green-500 relative cursor-pointer overflow-hidden ${\n                                shape === key ? 'border-green-500' : 'border-gray-300'\n                            }`}\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                viewBox=\"0 0 1440 320\"\n                                preserveAspectRatio=\"none\"\n                                className={`w-full h-full ${\n                                    position === 'top' ? 'transform rotate-180' : ''\n                                }`}\n                            >\n                                <path fill=\"currentColor\" fillOpacity=\"1\" d={shapes[key]}></path>\n                            </svg>\n                            <div className=\"flex items-center justify-center absolute top-0 left-0 h-full w-full\">\n                                <div\n                                    className={`w-8 h-8 rounded-full bg-green-500 shadow items-center justify-center ${\n                                        shape === key ? 'flex' : 'hidden'\n                                    }`}\n                                >\n                                    <svg\n                                        className=\"text-white\"\n                                        viewBox=\"0 0 24 24\"\n                                        width=\"20\"\n                                        height=\"20\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth=\"2\"\n                                        fill=\"none\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    >\n                                        <polyline points=\"20 6 9 17 4 12\"></polyline>\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default DividerShape\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/BackgroundStyle.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerColor.js",["397"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateColors, removeColors } from '@/utils/colors'\nimport ColorPicker from '../shared/ColorPicker'\nimport Label from '@/components/builder/Label'\nconst findAnd = require('find-and')\n\nconst DividerColor = ({ position }) => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [currentlyEditingChild, setCurrentlyEditingChild] = useState({})\n    const [dividerColor, setDividerColor] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentlyEditingChildIndex = currentlyEditing.data.findIndex(\n            (block) => block.type === `section-divider-${position}`\n        )\n        if (currentlyEditingChildIndex !== -1) {\n            setCurrentlyEditingChild(currentlyEditing.data[currentlyEditingChildIndex])\n            const currentTextColor = extractClass(\n                currentlyEditing.data[currentlyEditingChildIndex].classList,\n                generateColors('text-')\n            )\n            if (currentTextColor) {\n                setDividerColor(currentTextColor)\n            }\n        } else {\n            /**\n             * No child\n             */\n            setCurrentlyEditingChild({})\n        }\n    }, [currentlyEditing])\n\n    const handleDividerColorUpdate = (value) => {\n        setDividerColor(value)\n        const updatedClassList = removeColors(currentlyEditingChild.classList, 'text-')\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                data: findAnd.changeProps(\n                    currentlyEditing.data,\n                    { id: currentlyEditingChild.id },\n                    {\n                        ...currentlyEditingChild,\n                        data: {\n                            ...currentlyEditingChild.data,\n                        },\n                        classList: [...updatedClassList, value],\n                    }\n                ),\n            },\n        })\n    }\n\n    const handleResetStyle = () => {\n        setDividerColor(null)\n        const updatedClassList = removeColors(currentlyEditingChild.classList, 'text-')\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                data: findAnd.changeProps(\n                    currentlyEditing.data,\n                    { id: currentlyEditingChild.id },\n                    {\n                        ...currentlyEditingChild,\n                        data: {\n                            ...currentlyEditingChild.data,\n                        },\n                        classList: [...updatedClassList, 'text-transparent'],\n                    }\n                ),\n            },\n        })\n    }\n\n    if (currentlyEditingChild && currentlyEditingChild.data) {\n        return (\n            <div>\n                <Label\n                    title=\"Divider Color\"\n                    value={dividerColor}\n                    showClass={false}\n                    resetStyle={() => handleResetStyle()}\n                />\n\n                <ColorPicker\n                    currentColor={dividerColor}\n                    onClick={(color) => handleDividerColorUpdate(`text-${color}`)}\n                    showTransparent={false}\n                />\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default DividerColor\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerAdd.js",["398"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport Label from '@/components/builder/Label'\nimport { defaultBlocks } from '@/utils/blocks'\n\nconst DividerAdd = ({ position }) => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [currentlyEditingChild, setCurrentlyEditingChild] = useState({})\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentlyEditingChildIndex = currentlyEditing.data.findIndex(\n            (block) => block.type === `section-divider-${position}`\n        )\n        if (currentlyEditingChildIndex !== -1) {\n            setCurrentlyEditingChild(currentlyEditing.data[currentlyEditingChildIndex])\n        } else {\n            /**\n             * No child\n             */\n            setCurrentlyEditingChild({})\n        }\n    }, [currentlyEditing])\n\n    const handleSectionDividerAdd = () => {\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                data: [\n                    defaultBlocks(\n                        position === 'top' ? 'sectionDividerTop' : 'sectionDividerBottom'\n                    ),\n                    ...currentlyEditing.data,\n                ],\n            },\n        })\n    }\n\n    if (currentlyEditingChild && currentlyEditingChild.data) {\n        return null\n    } else {\n        return (\n            <div>\n                <div>\n                    <Label title=\"Add Divider\" showClass={false} />\n                    <button\n                        className=\"rounded-lg text-base font-medium py-2 px-8 bg-gradient-to-b from-blue-400 to-blue-500 hover:from-blue-500 hover:to-blue-600 text-white focus:outline-none\"\n                        onClick={() => handleSectionDividerAdd()}\n                    >\n                        Add Section Divider\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DividerAdd\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/section/DividerRemove.js",["399"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport Label from '@/components/builder/Label'\nconst findAnd = require('find-and')\n\nconst DividerRemove = ({ position }) => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [currentlyEditingChild, setCurrentlyEditingChild] = useState({})\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentlyEditingChildIndex = currentlyEditing.data.findIndex(\n            (block) => block.type === `section-divider-${position}`\n        )\n        if (currentlyEditingChildIndex !== -1) {\n            setCurrentlyEditingChild(currentlyEditing.data[currentlyEditingChildIndex])\n        } else {\n            /**\n             * No child\n             */\n            setCurrentlyEditingChild({})\n        }\n    }, [currentlyEditing])\n\n    const handleSectionDividerRemove = () => {\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                data: findAnd.removeObject(currentlyEditing.data, {\n                    id: currentlyEditingChild.id,\n                }),\n            },\n        })\n    }\n\n    if (currentlyEditingChild && currentlyEditingChild.data) {\n        return (\n            <div>\n                <div>\n                    <Label title=\"Remove Divider\" showClass={false} />\n                    <button\n                        className=\"rounded-lg text-base font-medium py-2 px-8 bg-gradient-to-b from-red-400 to-red-500 hover:from-red-500 hover:to-red-600 text-white focus:outline-none\"\n                        onClick={() => handleSectionDividerRemove()}\n                    >\n                        Remove Section Divider\n                    </button>\n                </div>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default DividerRemove\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/ModalTabs.js",["400"],"import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport CloseButton from './CloseButton'\n\nconst Tabs = ({ tabComponents }) => {\n    const [currentTabIndex, setCurrentTabIndex] = useState(0)\n\n    /**\n     * Set an array of objects with the classList key\n     * corrosponding to the tabComponents argument. This is\n     * setup so we can add/remove classes from individual tabs.\n     * Currently its setup so tab transitions aren't jumpy and we\n     * change the classlist after a timeout when the tab index updates\n     */\n    const [tabClasses, setTabClasses] = useState(\n        tabComponents.map((index) => {\n            if (currentTabIndex === index) {\n                return {\n                    classList: 'h-auto',\n                }\n            } else {\n                return {\n                    classList: '',\n                }\n            }\n        })\n    )\n\n    useEffect(() => {\n        /**\n         * Each time the tab index changes, update tabClasses and\n         * add a classname of 'h-0' to the hidden classes after 150ms\n         * This is to avoid weird jumping on tab transitions\n         */\n        setTimeout(() => {\n            setTabClasses(\n                tabClasses.map((item, index) => {\n                    if (currentTabIndex === index) {\n                        return {\n                            classList: 'h-auto',\n                        }\n                    } else {\n                        return {\n                            classList: 'h-0',\n                        }\n                    }\n                })\n            )\n        }, 150)\n    }, [currentTabIndex])\n\n    return (\n        <div>\n            <div className=\"flex flex-row items-center justify-between p-4 modal-tab-shadow-top\">\n                <div className=\"flex flex-row items-center transition duration-300 ease-in-out text-gray-700\">\n                    {tabComponents.map(({ title }, index) => (\n                        <button\n                            onClick={() => setCurrentTabIndex(index)}\n                            key={index}\n                            className={`cursor-pointer antialiased font-semibold rounded-lg px-3 py-1 focus:outline-none ${\n                                currentTabIndex === index ? 'bg-gray-200' : 'hover:text-gray-900'\n                            }`}\n                        >\n                            <div>{title}</div>\n                        </button>\n                    ))}\n                </div>\n                <CloseButton />\n            </div>\n            <div\n                className=\"relative min-h-96 max-h-124 overflow-y-scroll\"\n                style={{ height: '40vh' }}\n            >\n                {tabComponents.map(({ component }, index) => (\n                    <div\n                        key={index}\n                        className={`absolute top-0 left-0 w-full transition duration-150 px-4 pt-4 pb-24 ${\n                            currentTabIndex === index\n                                ? 'opacity-100 z-10'\n                                : `opacity-0 overflow-hidden z-0`\n                        } ${tabClasses[index].classList}`}\n                    >\n                        {component}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nTabs.propTypes = {\n    tabComponents: PropTypes.array.isRequired,\n}\n\nexport default Tabs\n","/Users/garrettbland/websites/blockbuilder/src/utils/shapes.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/row/AddRow.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/BackgroundColor.js",["401"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { removeColors } from '@/utils/colors'\nimport { extractClass } from '@/utils/tools'\nimport ColorPicker from './ColorPicker'\nimport Label from '@/components/builder/Label'\n\nconst BackgroundColor = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [bgColor, setBgColor] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentBgColor = extractClass(currentlyEditing.classList, 'bg-')\n        if (currentBgColor) {\n            setBgColor(currentBgColor)\n        }\n    }, [currentlyEditing.id])\n\n    const handleBackgroundColorUpdate = (value) => {\n        setBgColor(value)\n        const updatedClassList = removeColors(currentlyEditing.classList, 'bg-')\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: value ? [...updatedClassList, value] : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Background Color\"\n                value={bgColor}\n                resetStyle={() => handleBackgroundColorUpdate()}\n            />\n            <ColorPicker\n                currentColor={bgColor}\n                onClick={(color) => handleBackgroundColorUpdate(`bg-${color}`)}\n                type=\"background\"\n                showTransparent={false}\n            />\n        </div>\n    )\n}\n\nexport default BackgroundColor\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/PaddingTop.js",["402"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { generateSpacing, removeSpacing } from '@/utils/spacing'\nimport { extractClass } from '@/utils/tools'\nimport Label from '@/components/builder/Label'\n\nconst PaddingTop = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [paddingTop, setPaddingTop] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentPaddingTop = extractClass(currentlyEditing.classList, generateSpacing('pt-'))\n        if (currentPaddingTop) {\n            setPaddingTop(currentPaddingTop)\n        }\n    }, [])\n\n    const handlePaddingTopUpdate = (index) => {\n        setPaddingTop(index ? generateSpacing('pt-')[index] : null)\n\n        /**\n         * Filter out current max width classes\n         */\n        const updatedClassList = removeSpacing(currentlyEditing.classList, 'pt-')\n\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateSpacing('pt-')[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Padding Top\"\n                value={paddingTop}\n                resetStyle={() => handlePaddingTopUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateSpacing('pt-').length - 1}\n                value={generateSpacing('pt-').findIndex((item) => item === paddingTop)}\n                onChange={(event) => handlePaddingTopUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default PaddingTop\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/TextContent.js",["403","404","405","406"],"import React, { useEffect, useMemo, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { Bold, Italic, Link, Underline } from 'react-feather'\n\nimport isUrl from 'is-url'\nimport { Slate, Editable, withReact, useSlate } from 'slate-react'\nimport { Node, Transforms, Editor, Range, createEditor, Element as SlateElement } from 'slate'\nimport { withHistory } from 'slate-history'\n\n// import dynamic from 'next/dynamic'\n// const TrixEditor = dynamic(() => import('@/components/builder/TrixEditor'), {\n//     ssr: false,\n// })\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\n\nconst TextContent = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const dispatch = useDispatch()\n    // Create a Slate editor object that won't change across renders.\n    const renderElement = useCallback((props) => <Element {...props} />, [])\n    const renderLeaf = useCallback((props) => <Leaf {...props} />, [])\n    const editor = useMemo(() => withLinks(withHistory(withReact(createEditor()))), [])\n\n    // Keep track of state for the value of the editor.\n    // const [value, setValue] = useState([\n    //     {\n    //         type: 'paragraph',\n    //         children: [{ text: 'A line of text in a paragraph.' }],\n    //     },\n    // ])\n\n    const handleTextChange = (newValue) => {\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                content: {\n                    ...currentlyEditing.content,\n                    data: newValue,\n                },\n            },\n        })\n    }\n\n    return (\n        <div>\n            <div>\n                <Slate\n                    editor={editor}\n                    value={currentlyEditing.content.data}\n                    onChange={(newValue) => handleTextChange(newValue)}\n                >\n                    <div className=\"mb-1 inline-block\">\n                        <div className=\"flex flex-row cursor-pointer items-center rounded overflow-hidden bg-gray-100\">\n                            <MarkButton\n                                format=\"bold\"\n                                icon={<Bold strokeWidth=\"2.7\" size=\"18\" className=\"w-8 h-8 p-2\" />}\n                            />\n                            <MarkButton\n                                format=\"italic\"\n                                icon={\n                                    <Italic strokeWidth=\"2.7\" size=\"18\" className=\"w-8 h-8 p-2\" />\n                                }\n                            />\n                            <MarkButton\n                                format=\"underline\"\n                                icon={\n                                    <Underline\n                                        strokeWidth=\"2.7\"\n                                        size=\"18\"\n                                        className=\"w-8 h-8 p-2\"\n                                    />\n                                }\n                            />\n                            <LinkButton\n                                icon={<Link strokeWidth=\"2.7\" size=\"18\" className=\"w-8 h-8 p-2\" />}\n                            />\n                            {/* <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\n                        <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" /> */}\n                        </div>\n                    </div>\n                    <div>\n                        <Editable\n                            className=\"p-2 rounded border-2 border-gray-200 focus:border-blue-500\"\n                            style={{ minHeight: '6rem' }}\n                            placeholder=\"Enter some text…\"\n                            spellCheck\n                            renderElement={renderElement}\n                            renderLeaf={renderLeaf}\n                        />\n                    </div>\n                </Slate>\n            </div>\n        </div>\n    )\n}\n\nconst toggleBlock = (editor, format) => {\n    const isActive = isBlockActive(editor, format)\n    const isList = LIST_TYPES.includes(format)\n\n    Transforms.unwrapNodes(editor, {\n        match: (n) =>\n            LIST_TYPES.includes(!Editor.isEditor(n) && SlateElement.isElement(n) && n.type),\n        split: true,\n    })\n    const newProperties = {\n        type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n    }\n    Transforms.setNodes(editor, newProperties)\n\n    if (!isActive && isList) {\n        const block = { type: format, children: [] }\n        Transforms.wrapNodes(editor, block)\n    }\n}\n\nconst toggleMark = (editor, format) => {\n    const isActive = isMarkActive(editor, format)\n\n    if (isActive) {\n        Editor.removeMark(editor, format)\n    } else {\n        Editor.addMark(editor, format, true)\n    }\n}\n\nconst isBlockActive = (editor, format) => {\n    const [match] = Editor.nodes(editor, {\n        match: (n) => !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\n    })\n\n    return !!match\n}\n\nconst isMarkActive = (editor, format) => {\n    const marks = Editor.marks(editor)\n    return marks ? marks[format] === true : false\n}\n\nconst Element = ({ attributes, children, element }) => {\n    switch (element.type) {\n        case 'link':\n            return (\n                <a {...attributes} href={element.url}>\n                    {children}\n                </a>\n            )\n        case 'block-quote':\n            return <blockquote {...attributes}>{children}</blockquote>\n        case 'bulleted-list':\n            return <ul {...attributes}>{children}</ul>\n        case 'heading-one':\n            return <h1 {...attributes}>{children}</h1>\n        case 'heading-two':\n            return <h2 {...attributes}>{children}</h2>\n        case 'list-item':\n            return <li {...attributes}>{children}</li>\n        case 'numbered-list':\n            return <ol {...attributes}>{children}</ol>\n        default:\n            return <p {...attributes}>{children}</p>\n    }\n}\n\nconst Leaf = ({ attributes, children, leaf }) => {\n    if (leaf.bold) {\n        children = <strong>{children}</strong>\n    }\n\n    if (leaf.code) {\n        children = <code>{children}</code>\n    }\n\n    if (leaf.italic) {\n        children = <em>{children}</em>\n    }\n\n    if (leaf.underline) {\n        children = <u>{children}</u>\n    }\n\n    return <span {...attributes}>{children}</span>\n}\n\nconst BlockButton = ({ format, icon }) => {\n    const editor = useSlate()\n    return (\n        <button\n            className={isBlockActive(editor, format) ? 'text-blue-500' : ''}\n            // active={isBlockActive(editor, format)}\n            onMouseDown={(event) => {\n                event.preventDefault()\n                toggleBlock(editor, format)\n            }}\n        >\n            {icon}\n        </button>\n    )\n}\n\nconst MarkButton = ({ format, icon }) => {\n    const editor = useSlate()\n    return (\n        <button\n            className={\n                isMarkActive(editor, format) ? 'text-blue-500' : 'text-gray-600 hover:text-gray-900'\n            }\n            // active={isMarkActive(editor, format)}\n            onMouseDown={(event) => {\n                event.preventDefault()\n                toggleMark(editor, format)\n            }}\n        >\n            {icon}\n        </button>\n    )\n}\n\nconst LinkButton = ({ icon }) => {\n    const editor = useSlate()\n    return (\n        <button\n            className={isLinkActive(editor) ? 'text-blue-500' : 'text-gray-600 hover:text-gray-900'}\n            // active={isLinkActive(editor)}\n            onMouseDown={(event) => {\n                event.preventDefault()\n                const url = window.prompt('Enter the URL of the link:')\n                if (!url) return\n                insertLink(editor, url)\n            }}\n        >\n            {icon}\n        </button>\n    )\n}\n\nconst withLinks = (editor) => {\n    const { insertData, insertText, isInline } = editor\n\n    editor.isInline = (element) => {\n        return element.type === 'link' ? true : isInline(element)\n    }\n\n    editor.insertText = (text) => {\n        if (text && isUrl(text)) {\n            wrapLink(editor, text)\n        } else {\n            insertText(text)\n        }\n    }\n\n    editor.insertData = (data) => {\n        const text = data.getData('text/plain')\n\n        if (text && isUrl(text)) {\n            wrapLink(editor, text)\n        } else {\n            insertData(data)\n        }\n    }\n\n    return editor\n}\n\nconst insertLink = (editor, url) => {\n    if (editor.selection) {\n        wrapLink(editor, url)\n    }\n}\n\nconst isLinkActive = (editor) => {\n    const [link] = Editor.nodes(editor, {\n        match: (n) => !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === 'link',\n    })\n    return !!link\n}\n\nconst unwrapLink = (editor) => {\n    Transforms.unwrapNodes(editor, {\n        match: (n) => !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === 'link',\n    })\n}\n\nconst wrapLink = (editor, url) => {\n    if (isLinkActive(editor)) {\n        unwrapLink(editor)\n    }\n\n    const { selection } = editor\n    const isCollapsed = selection && Range.isCollapsed(selection)\n    const link = {\n        type: 'link',\n        url,\n        children: isCollapsed ? [{ text: url }] : [],\n    }\n\n    if (isCollapsed) {\n        Transforms.insertNodes(editor, link)\n    } else {\n        Transforms.wrapNodes(editor, link, { split: true })\n        Transforms.collapse(editor, { edge: 'end' })\n    }\n}\n\nexport default TextContent\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/PaddingBottom.js",["407"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { generateSpacing, removeSpacing } from '@/utils/spacing'\nimport { extractClass } from '@/utils/tools'\nimport Label from '@/components/builder/Label'\n\nconst PaddingBottom = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [paddingBottom, setPaddingBottom] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentPaddingBottom = extractClass(\n            currentlyEditing.classList,\n            generateSpacing('pb-')\n        )\n        if (currentPaddingBottom) {\n            setPaddingBottom(currentPaddingBottom)\n        }\n    }, [])\n\n    const handlePaddingBottomUpdate = (index) => {\n        setPaddingBottom(index ? generateSpacing('pb-')[index] : null)\n\n        /**\n         * Filter out current max width classes\n         */\n        const updatedClassList = removeSpacing(currentlyEditing.classList, 'pb-')\n\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateSpacing('pb-')[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Padding Bottom\"\n                value={paddingBottom}\n                resetStyle={() => handlePaddingBottomUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateSpacing('pb-').length - 1}\n                value={generateSpacing('pb-').findIndex((item) => item === paddingBottom)}\n                onChange={(event) => handlePaddingBottomUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default PaddingBottom\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/TextColor.js",["408"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateColors, removeColors } from '@/utils/colors'\nimport ColorPicker from './ColorPicker'\nimport Label from '@/components/builder/Label'\n\nconst TextColor = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [textColor, setTextColor] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentTextColor = extractClass(currentlyEditing.classList, generateColors('text-'))\n        if (currentTextColor) {\n            setTextColor(currentTextColor)\n        }\n    }, [currentlyEditing.id])\n\n    const handleTextColorUpdate = (value) => {\n        setTextColor(value)\n        const updatedClassList = removeColors(currentlyEditing.classList, 'text-')\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: value ? [...updatedClassList, value] : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Text Color\"\n                value={textColor}\n                resetStyle={() => handleTextColorUpdate()}\n            />\n            <ColorPicker\n                currentColor={textColor}\n                onClick={(color) => handleTextColorUpdate(`text-${color}`)}\n                showTransparent={false}\n            />\n        </div>\n    )\n}\n\nexport default TextColor\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/TextAlignment.js",["409"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { textAlignments, removeTextAlignments } from '@/utils/text'\nimport Label from '@/components/builder/Label'\nimport { AlignLeft, AlignCenter, AlignRight, AlignJustify } from 'react-feather'\n\nconst TextAlignment = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [textAlignment, setTextAlignment] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentTextAlignment = extractClass(currentlyEditing.classList, textAlignments())\n        if (currentTextAlignment) {\n            setTextAlignment(currentTextAlignment)\n        }\n    }, [currentlyEditing.id])\n\n    const handleTextAlignmentUpdate = (value) => {\n        setTextAlignment(value ? value : null)\n        const updatedClassList = removeTextAlignments(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: value ? [...updatedClassList, value] : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Alignment\"\n                value={textAlignment}\n                resetStyle={() => handleTextAlignmentUpdate()}\n            />\n            <div className=\"bg-gray-100 rounded-lg overflow-hidden inline-block\">\n                <div className=\"flex flex-row items-center cursor-pointer\">\n                    <AlignLeft\n                        className={`w-11 h-11 p-2 ${\n                            textAlignment === 'text-left'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleTextAlignmentUpdate('text-left')}\n                        strokeWidth={1.3}\n                    />\n                    <AlignCenter\n                        className={`w-11 h-11 p-2 ${\n                            textAlignment === 'text-center'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleTextAlignmentUpdate('text-center')}\n                        strokeWidth={1.3}\n                    />\n                    <AlignRight\n                        className={`w-11 h-11 p-2 ${\n                            textAlignment === 'text-right'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleTextAlignmentUpdate('text-right')}\n                        strokeWidth={1.3}\n                    />\n                    <AlignJustify\n                        className={`w-11 h-11 p-2 ${\n                            textAlignment === 'text-justify'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleTextAlignmentUpdate('text-justify')}\n                        strokeWidth={1.3}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TextAlignment\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/FontSize.js",["410"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateFontSizes, removeFontSizes } from '@/utils/text'\nimport Label from '@/components/builder/Label'\n\nconst FontSize = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [fontSize, setFontSize] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentFontSize = extractClass(currentlyEditing.classList, generateFontSizes())\n        if (currentFontSize) {\n            setFontSize(currentFontSize)\n        }\n    }, [currentlyEditing.id])\n\n    const handleFontSizeUpdate = (index) => {\n        setFontSize(index ? generateFontSizes()[index] : null)\n        const updatedClassList = removeFontSizes(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateFontSizes()[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label title=\"Font Size\" value={fontSize} resetStyle={() => handleFontSizeUpdate()} />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateFontSizes().length - 1}\n                value={generateFontSizes().findIndex((item) => item === fontSize)}\n                onChange={(event) => handleFontSizeUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default FontSize\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/FontWeight.js",["411","412"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateFontWeights, removeFontWeights } from '@/utils/text'\nimport Label from '@/components/builder/Label'\n\nconst FontWeight = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [fontWeight, setFontWeight] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentFontWeight = extractClass(currentlyEditing.classList, generateFontWeights())\n        if (currentFontWeight) {\n            setFontWeight(currentFontWeight)\n        }\n    }, [currentlyEditing.id])\n\n    const handleFontSizeUpdate = (index) => {\n        setFontWeight(index ? generateFontWeights()[index] : null)\n        const updatedClassList = removeFontWeights(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: [...updatedClassList, generateFontWeights()[index]],\n                classList: index\n                    ? [...updatedClassList, generateFontWeights()[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Font Weight\"\n                value={fontWeight}\n                resetStyle={() => handleFontSizeUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateFontWeights().length - 1}\n                value={generateFontWeights().findIndex((item) => item === fontWeight)}\n                onChange={(event) => handleFontSizeUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default FontWeight\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/text/LineHeight.js",["413"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateLineHeights, removeLineHeights } from '@/utils/text'\nimport Label from '@/components/builder/Label'\n\nconst LineHeight = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [lineHeight, setLineHeight] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentLineHeight = extractClass(currentlyEditing.classList, generateLineHeights())\n        if (currentLineHeight) {\n            setLineHeight(currentLineHeight)\n        }\n    }, [currentlyEditing.id])\n\n    const handleLineHeightUpdate = (index) => {\n        setLineHeight(index ? generateLineHeights()[index] : null)\n        const updatedClassList = removeLineHeights(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateLineHeights()[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Line Height\"\n                value={lineHeight}\n                resetStyle={() => handleLineHeightUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateLineHeights().length - 1}\n                value={generateLineHeights().findIndex((item) => item === lineHeight)}\n                onChange={(event) => handleLineHeightUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default LineHeight\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/BlockActionsButton.js",["414"],"import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { DUPLICATE_BLOCK, APPEND_CONTENT, SET_CUSTOM_MODAL } from '@/redux/constants'\nimport { Settings, PlusCircle, Copy } from 'react-feather'\nimport AddContent from './AddContent'\n\nconst BlockActionsButton = ({ block }) => {\n    const dispatch = useDispatch()\n\n    const handleAdd = (event) => {\n        // will stop any synthetic events from happening after this one\n        // example, will not fire edit block\n        event.stopPropagation()\n\n        dispatch({\n            type: SET_CUSTOM_MODAL,\n            payload: {\n                visible: true,\n                component: <AddContent block={block} />,\n                maxWidth: null,\n            },\n        })\n\n        // const content_type = window.prompt('What type of content? Text or Image or Link')\n        // const availableTypes = ['img', 'text', 'link']\n        // if (availableTypes.includes(content_type)) {\n        //     dispatch({\n        //         type: APPEND_CONTENT,\n        //         payload: {\n        //             id: block.id,\n        //             type: content_type,\n        //         },\n        //     })\n        // } else {\n        //     alert('content type not allowed')\n        // }\n    }\n\n    const DuplicateBlock = (event, block) => {\n        // will stop any synthetic events from happening after this one\n        // example, will not fire edit block\n        event.stopPropagation()\n\n        dispatch({\n            type: DUPLICATE_BLOCK,\n            payload: block,\n        })\n    }\n\n    return (\n        <div className=\"flex flex-row items-center bg-white rounded-lg shadow-xl border border-gray-200 text-base text-gray-700 cursor-pointer\">\n            <Settings\n                strokeWidth={1.3}\n                className=\"w-10 h-10 hover:text-gray-900 p-2 transform transition duration-150 ease-in-out hover:scale-110\"\n            />\n            <PlusCircle\n                strokeWidth={1.3}\n                className=\"w-10 h-10 hover:text-gray-900 p-2 transform transition duration-150 ease-in-out hover:scale-110\"\n                onClick={(event) => handleAdd(event, block)}\n            />\n            <Copy\n                strokeWidth={1.3}\n                className=\"w-10 h-10 hover:text-gray-900 p-2 transform transition duration-150 ease-in-out hover:scale-110\"\n                onClick={(event) => DuplicateBlock(event, block)}\n            />\n        </div>\n    )\n}\n\nexport default BlockActionsButton\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImageUrl.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImageAlt.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/BoxShadow.js",["415"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateBoxShadows, removeBoxShadows } from '@/utils/shadow'\nimport Label from '@/components/builder/Label'\n\nconst BoxShadow = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [boxShadow, setBoxShadow] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentBoxShadow = extractClass(currentlyEditing.classList, generateBoxShadows())\n        if (currentBoxShadow) {\n            setBoxShadow(currentBoxShadow)\n        }\n    }, [currentlyEditing.id])\n\n    const handleBoxShadowUpdate = (index) => {\n        setBoxShadow(index ? generateBoxShadows()[index] : null)\n        const updatedClassList = removeBoxShadows(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateBoxShadows()[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <div>\n                <Label\n                    title=\"Box Shadow\"\n                    value={boxShadow}\n                    resetStyle={() => handleBoxShadowUpdate()}\n                />\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max={generateBoxShadows().length - 1}\n                    value={generateBoxShadows().findIndex((item) => item === boxShadow)}\n                    onChange={(event) => handleBoxShadowUpdate(event.target.value)}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BoxShadow\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/BorderRadius.js",["416"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateBorderRadiuses, removeBorderRadiuses } from '@/utils/border'\nimport Label from '@/components/builder/Label'\n\nconst BorderRadius = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [borderRadius, setBorderRadius] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentBorderRadius = extractClass(\n            currentlyEditing.classList,\n            generateBorderRadiuses()\n        )\n        if (currentBorderRadius) {\n            setBorderRadius(currentBorderRadius)\n        }\n    }, [currentlyEditing.id])\n\n    const handleBorderRadiusUpdate = (index) => {\n        setBorderRadius(index ? generateBorderRadiuses()[index] : null)\n        const updatedClassList = removeBorderRadiuses(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateBorderRadiuses()[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <div>\n                <Label\n                    title=\"Border Radius\"\n                    value={borderRadius}\n                    resetStyle={() => handleBorderRadiusUpdate()}\n                />\n                <input\n                    type=\"range\"\n                    min=\"0\"\n                    max={generateBorderRadiuses().length - 1}\n                    value={generateBorderRadiuses().findIndex((item) => item === borderRadius)}\n                    onChange={(event) => handleBorderRadiusUpdate(event.target.value)}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BorderRadius\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/MarginTop.js",["417"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { generateSpacing, removeSpacing } from '@/utils/spacing'\nimport { extractClass } from '@/utils/tools'\nimport Label from '@/components/builder/Label'\n\nconst MarginTop = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [marginTop, setMarginTop] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentMarginTop = extractClass(currentlyEditing.classList, generateSpacing('mt-'))\n        if (currentMarginTop) {\n            setMarginTop(currentMarginTop)\n        }\n    }, [])\n\n    const handleMarginTopUpdate = (index) => {\n        setMarginTop(index ? generateSpacing('mt-')[index] : null)\n\n        /**\n         * Filter out current max width classes\n         */\n        const updatedClassList = removeSpacing(currentlyEditing.classList, 'mt-')\n\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateSpacing('mt-')[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Margin Top\"\n                value={marginTop}\n                resetStyle={() => handleMarginTopUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateSpacing('mt-').length - 1}\n                value={generateSpacing('mt-').findIndex((item) => item === marginTop)}\n                onChange={(event) => handleMarginTopUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default MarginTop\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/image/ImagePreview.js",["418"],"/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/MarginBottom.js",["419"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { generateSpacing, removeSpacing } from '@/utils/spacing'\nimport { extractClass } from '@/utils/tools'\nimport Label from '@/components/builder/Label'\n\nconst MarginBottom = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [marginBottom, setMarginBottom] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentMarginBottom = extractClass(currentlyEditing.classList, generateSpacing('mb-'))\n        if (currentMarginBottom) {\n            setMarginBottom(currentMarginBottom)\n        }\n    }, [])\n\n    const handleMarginBottomUpdate = (index) => {\n        setMarginBottom(index ? generateSpacing('mb-')[index] : null)\n\n        /**\n         * Filter out current max width classes\n         */\n        const updatedClassList = removeSpacing(currentlyEditing.classList, 'mb-')\n\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateSpacing('mb-')[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Margin Bottom\"\n                value={marginBottom}\n                resetStyle={() => handleMarginBottomUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateSpacing('mb-').length - 1}\n                value={generateSpacing('mb-').findIndex((item) => item === marginBottom)}\n                onChange={(event) => handleMarginBottomUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default MarginBottom\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/AddContentButton.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/AutoMargin.js",["420"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { autoMargins, removeAutoMargins } from '@/utils/spacing'\nimport Label from '@/components/builder/Label'\nimport { AlignLeft, AlignCenter, AlignRight } from 'react-feather'\n\nconst AutoMargin = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [autoMargin, setAutoMargin] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentAutoMargin = extractClass(currentlyEditing.classList, autoMargins())\n        if (currentAutoMargin) {\n            setAutoMargin(currentAutoMargin)\n        }\n    }, [currentlyEditing.id])\n\n    const handleAutoMarginUpdate = (value) => {\n        setAutoMargin(value ? value : null)\n        const updatedClassList = removeAutoMargins(currentlyEditing.classList)\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: value ? [...updatedClassList, value] : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Button Alignment\"\n                value={autoMargin}\n                resetStyle={() => handleAutoMarginUpdate()}\n            />\n            <div className=\"bg-gray-100 rounded-lg overflow-hidden inline-block\">\n                <div className=\"flex flex-row items-center cursor-pointer\">\n                    <AlignLeft\n                        className={`w-11 h-11 p-2 ${\n                            autoMargin === 'mr-auto'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleAutoMarginUpdate('mr-auto')}\n                        strokeWidth={1.3}\n                    />\n                    <AlignCenter\n                        className={`w-11 h-11 p-2 ${\n                            autoMargin === 'mx-auto'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleAutoMarginUpdate('mx-auto')}\n                        strokeWidth={1.3}\n                    />\n                    <AlignRight\n                        className={`w-11 h-11 p-2 ${\n                            autoMargin === 'ml-auto'\n                                ? 'text-blue-900 bg-blue-100'\n                                : 'text-gray-700 hover:text-gray-900 hover:bg-gray-200'\n                        }`}\n                        onClick={() => handleAutoMarginUpdate('ml-auto')}\n                        strokeWidth={1.3}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AutoMargin\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/link/LinkTitle.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/link/LinkHref.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/AddContent.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/row/MaxWidth.js",["421"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateMaxWidths, removeMaxWidthClasses } from '@/utils/width'\nimport Label from '@/components/builder/Label'\n\nconst MaxWidth = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [maxWidth, setMaxWidth] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentMaxWidth = extractClass(currentlyEditing.classList, ['max-w-', 'container'])\n        if (currentMaxWidth) {\n            setMaxWidth(currentMaxWidth)\n        }\n    }, [])\n\n    const handleMaxWidthUpdate = (index) => {\n        setMaxWidth(index ? generateMaxWidths()[index] : null)\n\n        /**\n         * Filter out current max width classes\n         */\n        const updatedClassList = removeMaxWidthClasses(currentlyEditing.classList)\n\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateMaxWidths()[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label title=\"Max Width\" value={maxWidth} resetStyle={() => handleMaxWidthUpdate()} />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateMaxWidths().length - 1}\n                value={generateMaxWidths().findIndex((item) => item === maxWidth)}\n                onChange={(event) => handleMaxWidthUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default MaxWidth\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/row/BackgroundOpacity.js",["422"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPDATE_EDITING } from '@/redux/constants'\nimport { extractClass } from '@/utils/tools'\nimport { generateOpacities, removeOpacity } from '@/utils/opacity'\nimport Label from '@/components/builder/Label'\n\nconst BackgroundOpacity = () => {\n    const currentlyEditing = useSelector((state) => state.currentlyEditing)\n    const [backgroundOpacity, setBackgroundOpacity] = useState('')\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const currentBackgroundOpacity = extractClass(\n            currentlyEditing.classList,\n            generateOpacities('bg-')\n        )\n        if (currentBackgroundOpacity) {\n            setBackgroundOpacity(currentBackgroundOpacity)\n        }\n    }, [])\n\n    const handleBackgroundOpacityUpdate = (index) => {\n        setBackgroundOpacity(index ? generateOpacities('bg-')[index] : null)\n\n        /**\n         * Filter out current max width classes\n         */\n        const updatedClassList = removeOpacity(currentlyEditing.classList, 'bg-')\n\n        dispatch({\n            type: UPDATE_EDITING,\n            payload: {\n                ...currentlyEditing,\n                classList: index\n                    ? [...updatedClassList, generateOpacities('bg-')[index]]\n                    : [...updatedClassList],\n            },\n        })\n    }\n\n    return (\n        <div>\n            <Label\n                title=\"Background Opacity\"\n                value={backgroundOpacity}\n                resetStyle={() => handleBackgroundOpacityUpdate()}\n            />\n            <input\n                type=\"range\"\n                min=\"0\"\n                max={generateOpacities('bg-').length - 1}\n                value={generateOpacities('bg-').findIndex((item) => item === backgroundOpacity)}\n                onChange={(event) => handleBackgroundOpacityUpdate(event.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default BackgroundOpacity\n","/Users/garrettbland/websites/blockbuilder/src/components/builder/CloseButton.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/shared/ColorPicker.js",[],"/Users/garrettbland/websites/blockbuilder/src/components/builder/Label.js",[],"/Users/garrettbland/websites/blockbuilder/src/utils/colors.js",["423"],"const tailwind_colors = require('tailwindcss/colors')\n\nexport const generateColors = (prefix = '') => {\n    /**\n     * Will generate base tailwind colors.\n     * For example, without a prefix such as 'bg-' or 'text-'.\n     * ['black','white','blue-500','blue-600']\n     */\n\n    /**\n     * If prefix is passed, verify that the dash is there\n     */\n    if (prefix && !prefix.includes('-')) {\n        throw new Error(`Your prefix (${prefix}) must include a trailing dash (-)`)\n    }\n\n    /**\n     * Define color palette array to return.\n     */\n    let color_palette = []\n\n    Object.entries(tailwind_colors).map(([key, value]) => {\n        const baseColor = key\n\n        if (typeof value === 'string') {\n            color_palette = [...color_palette, `${prefix}${baseColor}`]\n        } else {\n            const sub_colors = Object.entries(value).map(([sub_key]) => {\n                return `${prefix}${baseColor}-${sub_key}`\n            })\n\n            sub_colors.forEach((className) => {\n                color_palette = [...color_palette, className]\n            })\n        }\n    })\n\n    return color_palette\n}\n\nexport const removeColors = (classList, prefix = '') => {\n    return classList.filter((className) => !generateColors(prefix).includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/text.js",["424","425"],"const defaultTheme = require('tailwindcss/defaultTheme')\n\nexport const generateFontSizes = () => {\n    /**\n     * Will generate tailwind font sizes\n     */\n    const prefix = 'text'\n\n    /**\n     * Define font sizes array to return.\n     */\n    let fontSizes = []\n\n    Object.entries(defaultTheme.fontSize).map(([key]) => {\n        fontSizes = [...fontSizes, `${prefix}-${key}`]\n    })\n\n    return fontSizes\n}\n\nexport const textAlignments = () => {\n    /**\n     * Not referencing tailwind theme because this is a core\n     * plugin, and I can't figure out how\n     */\n    return ['text-left', 'text-center', 'text-right', 'text-justify']\n}\n\nexport const generateLineHeights = () => {\n    /**\n     * Not referencing tailwind theme because the fixed line\n     * heights (leading-4, leading-5, etc) I feel will cause a crazy\n     * amount of headaches\n     */\n    return [\n        'leading-none',\n        'leading-tight',\n        'leading-snug',\n        'leading-normal',\n        'leading-relaxed',\n        'leading-loose',\n    ]\n}\n\nexport const generateFontWeights = () => {\n    /**\n     * Will generate tailwind font weights\n     */\n    const prefix = 'font'\n\n    /**\n     * Define array to return.\n     */\n    let fontWeights = []\n\n    Object.entries(defaultTheme.fontWeight).map(([key]) => {\n        fontWeights = [...fontWeights, `${prefix}-${key}`]\n    })\n\n    return fontWeights\n}\n\nexport const removeFontSizes = (classList) => {\n    return classList.filter((className) => !generateFontSizes().includes(className))\n}\n\nexport const removeTextAlignments = (classList) => {\n    return classList.filter((className) => !textAlignments().includes(className))\n}\n\nexport const removeLineHeights = (classList) => {\n    return classList.filter((className) => !generateLineHeights().includes(className))\n}\n\nexport const removeFontWeights = (classList) => {\n    return classList.filter((className) => !generateFontWeights().includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/spacing.js",["426"],"const defaultTheme = require('tailwindcss/defaultTheme')\n\nexport const generateSpacing = (prefix = '') => {\n    /**\n     * Will generate base tailwind spaces.\n     * For example, without a prefix such as 'mt-' or 'pb-'.\n     * ['12,'14','16']\n     */\n\n    /**\n     * If prefix is passed, verify that the dash is there\n     */\n    if (prefix && !prefix.includes('-')) {\n        throw new Error(`Your prefix (${prefix}) must include a trailing dash (-)`)\n    }\n\n    /**\n     * Define spacing array to return.\n     */\n    let spacing = []\n\n    Object.entries(defaultTheme.spacing).map(([key, value]) => {\n        if (typeof value === 'string') {\n            spacing = [...spacing, `${prefix}${key}`]\n        }\n    })\n\n    return spacing\n}\n\nexport const autoMargins = () => {\n    /**\n     * Not referencing tailwind theme because this isn't\n     * a set class. Also not sure if I want to handle button `floats`\n     * like this. Might want to use flex instead with justifying content\n     */\n    return ['mx-auto', 'ml-auto', 'mr-auto']\n}\n\nexport const removeAutoMargins = (classList) => {\n    return classList.filter((className) => !autoMargins().includes(className))\n}\n\nexport const removeSpacing = (classList, prefix = '') => {\n    return classList.filter((className) => !generateSpacing(prefix).includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/border.js",["427","428"],"const defaultTheme = require('tailwindcss/defaultTheme')\n\nexport const generateBorderRadiuses = () => {\n    /**\n     * Will generate tailwind border radiuses.\n     */\n    const prefix = 'rounded'\n\n    /**\n     * Define border radiuses array to return.\n     */\n    let borderRadiuses = []\n\n    Object.entries(defaultTheme.borderRadius).map(([key, value]) => {\n        if (typeof value === 'string') {\n            if (key === 'DEFAULT') {\n                /**\n                 * Tailwind includes a DEFAULT value. Since 'rounded-DEFAULT'\n                 * doesn't exist, returns 'rounded' class\n                 */\n                borderRadiuses = [...borderRadiuses, `${prefix}`]\n                return\n            }\n            borderRadiuses = [...borderRadiuses, `${prefix}-${key}`]\n        }\n    })\n\n    return borderRadiuses\n}\n\nexport const removeBorderRadiuses = (classList) => {\n    return classList.filter((className) => !generateBorderRadiuses().includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/tools.js",[],"/Users/garrettbland/websites/blockbuilder/src/utils/opacity.js",["429"],"const defaultTheme = require('tailwindcss/defaultTheme')\n\nexport const generateOpacities = (prefix = '') => {\n    /**\n     * Will generate base tailwind opacities.\n     * For example, without a prefix such as 'background-' or 'text-'.\n     * ['20,'25','30']\n     */\n\n    /**\n     * If prefix is passed, verify that the dash is there\n     */\n    if (prefix && !prefix.includes('-')) {\n        throw new Error(`Your prefix (${prefix}) must include a trailing dash (-)`)\n    }\n\n    /**\n     * Define opacities array to return.\n     */\n    let opacities = []\n\n    Object.entries(defaultTheme.opacity).map(([key, value]) => {\n        if (typeof value === 'string') {\n            opacities = [...opacities, `${prefix}opacity-${key}`]\n        }\n    })\n\n    return opacities\n}\n\nexport const removeOpacity = (classList, prefix = '') => {\n    return classList.filter((className) => !generateOpacities(prefix).includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/width.js",["430"],"const defaultTheme = require('tailwindcss/defaultTheme')\n\nexport const generateMaxWidths = () => {\n    const prefix = 'max-w'\n\n    /**\n     * Define array to return.\n     */\n    let maxWidths = []\n\n    /**\n     * Tailwind config expects `theme` function and destructured\n     * `breakpoints` function to return max widths. Since this isn't\n     * being piped through the build process, these two functions\n     * are defined below and return null and then we get our max widths\n     *\n     * Refer to the default config for tailwind v2.0.1\n     */\n    const theme = () => {\n        return null\n    }\n\n    const breakpoints = () => {\n        return null\n    }\n\n    Object.entries(\n        defaultTheme.maxWidth(theme, {\n            breakpoints,\n        })\n    ).map(([key]) => {\n        maxWidths = [...maxWidths, `${prefix}-${key}`]\n    })\n\n    return maxWidths\n}\n\nexport const removeMaxWidthClasses = (classList) => {\n    return classList.filter((className) => !generateMaxWidths().includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/shadow.js",["431","432"],"const defaultTheme = require('tailwindcss/defaultTheme')\n\nexport const generateBoxShadows = () => {\n    /**\n     * Will generate tailwind box shadows\n     */\n    const prefix = 'shadow'\n\n    /**\n     * Define box shadows array to return.\n     */\n    let boxShadows = []\n\n    Object.entries(defaultTheme.boxShadow).map(([key, value]) => {\n        if (typeof value === 'string') {\n            if (key === 'DEFAULT') {\n                /**\n                 * Tailwind includes a DEFAULT value. Since 'shadow-DEFAULT'\n                 * doesn't exist, returns 'shadow' class\n                 */\n                boxShadows = [...boxShadows, `${prefix}`]\n                return\n            }\n            boxShadows = [...boxShadows, `${prefix}-${key}`]\n        }\n    })\n\n    return boxShadows\n}\n\nexport const removeBoxShadows = (classList) => {\n    return classList.filter((className) => !generateBoxShadows().includes(className))\n}\n","/Users/garrettbland/websites/blockbuilder/src/utils/background.js",[],{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","severity":1,"message":"438","line":5,"column":5,"nodeType":"439","messageId":"440","endLine":22,"endColumn":6},{"ruleId":"441","severity":1,"message":"442","line":1,"column":17,"nodeType":"443","messageId":"444","endLine":1,"endColumn":26},{"ruleId":"445","severity":1,"message":"446","line":26,"column":8,"nodeType":"447","endLine":26,"endColumn":12,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":15,"column":22,"nodeType":"451","messageId":"452","endLine":15,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":16,"column":13,"nodeType":"455","messageId":"456","endLine":44,"endColumn":14},{"ruleId":"449","severity":1,"message":"450","line":140,"column":28,"nodeType":"451","messageId":"452","endLine":140,"endColumn":30},{"ruleId":"441","severity":1,"message":"457","line":3,"column":45,"nodeType":"443","messageId":"444","endLine":3,"endColumn":57},{"ruleId":"445","severity":1,"message":"458","line":30,"column":26,"nodeType":"443","endLine":30,"endColumn":33},{"ruleId":"445","severity":1,"message":"459","line":32,"column":8,"nodeType":"447","endLine":32,"endColumn":10,"suggestions":"460"},{"ruleId":"445","severity":1,"message":"458","line":22,"column":26,"nodeType":"443","endLine":22,"endColumn":33},{"ruleId":"445","severity":1,"message":"459","line":24,"column":8,"nodeType":"447","endLine":24,"endColumn":10,"suggestions":"461"},{"ruleId":"441","severity":1,"message":"462","line":5,"column":21,"nodeType":"443","messageId":"444","endLine":5,"endColumn":29},{"ruleId":"441","severity":1,"message":"463","line":5,"column":31,"nodeType":"443","messageId":"444","endLine":5,"endColumn":35},{"ruleId":"464","severity":1,"message":"465","line":142,"column":25,"nodeType":"466","endLine":146,"endColumn":26},{"ruleId":"441","severity":1,"message":"467","line":159,"column":7,"nodeType":"443","messageId":"444","endLine":159,"endColumn":18},{"ruleId":"449","severity":1,"message":"450","line":167,"column":26,"nodeType":"451","messageId":"452","endLine":167,"endColumn":28},{"ruleId":"453","severity":1,"message":"454","line":168,"column":17,"nodeType":"455","messageId":"456","endLine":224,"endColumn":18},{"ruleId":"468","severity":1,"message":"469","line":194,"column":21,"nodeType":"470","messageId":"471","endLine":202,"endColumn":22},{"ruleId":"468","severity":1,"message":"469","line":203,"column":21,"nodeType":"470","messageId":"471","endLine":207,"endColumn":22},{"ruleId":"441","severity":1,"message":"472","line":252,"column":11,"nodeType":"443","messageId":"444","endLine":252,"endColumn":17},{"ruleId":"437","severity":1,"message":"438","line":26,"column":5,"nodeType":"439","messageId":"440","endLine":38,"endColumn":6},{"ruleId":"441","severity":1,"message":"473","line":4,"column":5,"nodeType":"443","messageId":"444","endLine":4,"endColumn":16},{"ruleId":"441","severity":1,"message":"474","line":5,"column":5,"nodeType":"443","messageId":"444","endLine":5,"endColumn":17},{"ruleId":"441","severity":1,"message":"475","line":6,"column":5,"nodeType":"443","messageId":"444","endLine":6,"endColumn":25},{"ruleId":"476","severity":1,"message":"477","line":59,"column":53,"nodeType":"466","endLine":59,"endColumn":56},{"ruleId":"441","severity":1,"message":"478","line":4,"column":23,"nodeType":"443","messageId":"444","endLine":4,"endColumn":38},{"ruleId":"441","severity":1,"message":"479","line":5,"column":8,"nodeType":"443","messageId":"444","endLine":5,"endColumn":24},{"ruleId":"441","severity":1,"message":"480","line":6,"column":5,"nodeType":"443","messageId":"444","endLine":6,"endColumn":15},{"ruleId":"441","severity":1,"message":"481","line":13,"column":8,"nodeType":"443","messageId":"444","endLine":13,"endColumn":19},{"ruleId":"445","severity":1,"message":"482","line":35,"column":8,"nodeType":"447","endLine":35,"endColumn":26,"suggestions":"483"},{"ruleId":"445","severity":1,"message":"482","line":35,"column":8,"nodeType":"447","endLine":35,"endColumn":26,"suggestions":"484"},{"ruleId":"445","severity":1,"message":"482","line":24,"column":8,"nodeType":"447","endLine":24,"endColumn":26,"suggestions":"485"},{"ruleId":"445","severity":1,"message":"482","line":24,"column":8,"nodeType":"447","endLine":24,"endColumn":26,"suggestions":"486"},{"ruleId":"445","severity":1,"message":"487","line":50,"column":8,"nodeType":"447","endLine":50,"endColumn":25,"suggestions":"488"},{"ruleId":"445","severity":1,"message":"489","line":19,"column":8,"nodeType":"447","endLine":19,"endColumn":29,"suggestions":"490"},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":10,"suggestions":"491"},{"ruleId":"441","severity":1,"message":"442","line":1,"column":17,"nodeType":"443","messageId":"444","endLine":1,"endColumn":26},{"ruleId":"441","severity":1,"message":"492","line":1,"column":37,"nodeType":"443","messageId":"444","endLine":1,"endColumn":45},{"ruleId":"441","severity":1,"message":"493","line":8,"column":10,"nodeType":"443","messageId":"444","endLine":8,"endColumn":14},{"ruleId":"441","severity":1,"message":"494","line":188,"column":7,"nodeType":"443","messageId":"444","endLine":188,"endColumn":18},{"ruleId":"445","severity":1,"message":"489","line":21,"column":8,"nodeType":"447","endLine":21,"endColumn":10,"suggestions":"495"},{"ruleId":"445","severity":1,"message":"489","line":19,"column":8,"nodeType":"447","endLine":19,"endColumn":29,"suggestions":"496"},{"ruleId":"445","severity":1,"message":"489","line":19,"column":8,"nodeType":"447","endLine":19,"endColumn":29,"suggestions":"497"},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":29,"suggestions":"498"},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":29,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":28,"column":17,"nodeType":"502","messageId":"503","endLine":28,"endColumn":26},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":29,"suggestions":"504"},{"ruleId":"441","severity":1,"message":"505","line":3,"column":27,"nodeType":"443","messageId":"444","endLine":3,"endColumn":41},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":29,"suggestions":"506"},{"ruleId":"445","severity":1,"message":"489","line":21,"column":8,"nodeType":"447","endLine":21,"endColumn":29,"suggestions":"507"},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":10,"suggestions":"508"},{"ruleId":"509","severity":1,"message":"510","line":10,"column":13,"nodeType":"466","endLine":10,"endColumn":76},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":10,"suggestions":"511"},{"ruleId":"445","severity":1,"message":"489","line":19,"column":8,"nodeType":"447","endLine":19,"endColumn":29,"suggestions":"512"},{"ruleId":"445","severity":1,"message":"489","line":18,"column":8,"nodeType":"447","endLine":18,"endColumn":10,"suggestions":"513"},{"ruleId":"445","severity":1,"message":"489","line":21,"column":8,"nodeType":"447","endLine":21,"endColumn":10,"suggestions":"514"},{"ruleId":"449","severity":1,"message":"515","line":22,"column":56,"nodeType":"451","messageId":"516","endLine":22,"endColumn":58},{"ruleId":"449","severity":1,"message":"515","line":14,"column":55,"nodeType":"451","messageId":"516","endLine":14,"endColumn":57},{"ruleId":"449","severity":1,"message":"515","line":56,"column":57,"nodeType":"451","messageId":"516","endLine":56,"endColumn":59},{"ruleId":"449","severity":1,"message":"515","line":22,"column":61,"nodeType":"451","messageId":"516","endLine":22,"endColumn":63},{"ruleId":"449","severity":1,"message":"450","line":14,"column":66,"nodeType":"451","messageId":"452","endLine":14,"endColumn":68},{"ruleId":"449","severity":1,"message":"515","line":22,"column":17,"nodeType":"439","messageId":"517","endLine":22,"endColumn":23},{"ruleId":"449","severity":1,"message":"515","line":22,"column":61,"nodeType":"451","messageId":"516","endLine":22,"endColumn":63},{"ruleId":"449","severity":1,"message":"515","line":31,"column":19,"nodeType":"451","messageId":"516","endLine":31,"endColumn":21},{"ruleId":"449","severity":1,"message":"450","line":14,"column":63,"nodeType":"451","messageId":"452","endLine":14,"endColumn":65},{"ruleId":"449","severity":1,"message":"515","line":22,"column":17,"nodeType":"439","messageId":"517","endLine":22,"endColumn":23},"no-native-reassign",["518"],"no-negated-in-lhs",["519"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchBlocks'. Either include it or remove the dependency array.","ArrayExpression",["520"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'UPDATE_BLOCK' is defined but never used.","The ref value 'overlayNode.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'overlayNode.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["521"],["522"],"'navigate' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'CodePreview' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'params' is assigned a value but never used.","'SET_EDITING' is defined but never used.","'REMOVE_BLOCK' is defined but never used.","'SET_MODAL_VISIBILITY' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DUPLICATE_BLOCK' is defined but never used.","'AddContentButton' is defined but never used.","'APPEND_ROW' is defined but never used.","'CustomModal' is defined but never used.","React Hook useEffect has a missing dependency: 'position'. Either include it or remove the dependency array.",["523"],["524"],["525"],["526"],"React Hook useEffect has a missing dependency: 'tabClasses'. Either include it or remove the dependency array. You can also do a functional update 'setTabClasses(t => ...)' if you only need 'tabClasses' in the 'setTabClasses' call.",["527"],"React Hook useEffect has a missing dependency: 'currentlyEditing.classList'. Either include it or remove the dependency array.",["528"],["529"],"'useState' is defined but never used.","'Node' is defined but never used.","'BlockButton' is assigned a value but never used.",["530"],["531"],["532"],["533"],["534"],"no-dupe-keys","Duplicate key 'classList'.","ObjectExpression","unexpected",["535"],"'APPEND_CONTENT' is defined but never used.",["536"],["537"],["538"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["539"],["540"],["541"],["542"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"545","fix":"547"},{"desc":"548","fix":"549"},{"desc":"548","fix":"550"},{"desc":"548","fix":"551"},{"desc":"548","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"557","fix":"559"},{"desc":"555","fix":"560"},{"desc":"555","fix":"561"},{"desc":"555","fix":"562"},{"desc":"555","fix":"563"},{"desc":"555","fix":"564"},{"desc":"555","fix":"565"},{"desc":"555","fix":"566"},{"desc":"557","fix":"567"},{"desc":"557","fix":"568"},{"desc":"555","fix":"569"},{"desc":"557","fix":"570"},{"desc":"557","fix":"571"},"Update the dependencies array to be: [fetchBlocks, id]",{"range":"572","text":"573"},"Update the dependencies array to be: [handleClick]",{"range":"574","text":"575"},{"range":"576","text":"575"},"Update the dependencies array to be: [currentlyEditing, position]",{"range":"577","text":"578"},{"range":"579","text":"578"},{"range":"580","text":"578"},{"range":"581","text":"578"},"Update the dependencies array to be: [currentTabIndex, tabClasses]",{"range":"582","text":"583"},"Update the dependencies array to be: [currentlyEditing.classList, currentlyEditing.id]",{"range":"584","text":"585"},"Update the dependencies array to be: [currentlyEditing.classList]",{"range":"586","text":"587"},{"range":"588","text":"587"},{"range":"589","text":"585"},{"range":"590","text":"585"},{"range":"591","text":"585"},{"range":"592","text":"585"},{"range":"593","text":"585"},{"range":"594","text":"585"},{"range":"595","text":"585"},{"range":"596","text":"587"},{"range":"597","text":"587"},{"range":"598","text":"585"},{"range":"599","text":"587"},{"range":"600","text":"587"},[732,736],"[fetchBlocks, id]",[1170,1172],"[handleClick]",[763,765],[1266,1284],"[currentlyEditing, position]",[1407,1425],[922,940],[914,932],[1628,1645],"[currentTabIndex, tabClasses]",[714,735],"[currentlyEditing.classList, currentlyEditing.id]",[723,725],"[currentlyEditing.classList]",[778,780],[754,775],[822,843],[707,728],[727,748],[727,748],[719,740],[786,807],[716,718],[737,739],[781,802],[718,720],[810,812]]